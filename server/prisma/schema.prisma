// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  email            String    @unique
  username         String    @unique
  password         String    @unique
  isEmailConfirmed Boolean   @default(false)
  token            String?
  expireDate       DateTime?
  posts            Post[]
  likes            Like[]
  comments         Comment[]
  Status           Status[]
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Post {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  content  String
  image    Json?
  likes    Like[]
  comments Comment[]
  User     User?     @relation(fields: [userId], references: [id])
  userId   String?   @db.ObjectId
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post?    @relation(fields: [postId], references: [id])
  postId    String?  @db.ObjectId
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post?    @relation(fields: [postId], references: [id])
  postId    String?  @db.ObjectId
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
}

model Status {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
}
